IN 10H

MVI A,0DH      ; φορτώνει στον καταχωρητή το 00001101 = MSE=1, M7.5=1, M6.5=0, M5.5=1
SIM            ; set interrupt mask ενεργοποιεί ΜΟΝΟ την RST 6.5
EI             ; η εντολή αυτή εππιτρέπει γενικά τις διακοπές
               ;
LOOP1:         ;
MVI A,00H      ; αρχικοποιούμε διαδοχικά 6 θέσεις μνήμης με 0  
STA 09C2H      ;
STA 09C3H      ;
STA 09C4H      ;
STA 09C5H      ;
STA 09C6H      ;
STA 09C7H	 ; αρχικοποιώ τα LSB με 0 
LXI D,09C2H    ; θέλω να ξεκινήσω από τη θέση μνήμης 09C2H
               ;
CALL STDM      ;
CALL DCD       ;
JMP LOOP1      ; για να ειναι συνεχεια κλειστα οσο δεν εχουμε interrupt
               ;
INTR_ROUTINE:  ; εδώ κάνει jump κατευθείαν μόλις δέχεται το interrupt
PUSH PSW       ; αποθηκεύουμε σε μία στοίβα το περιεχόμενο του καταχωρητή Α και τα flags
MVI A,3CH      ; 60 sec υπολειπομενα sec / counter=60 για να τρέξει η λούπα 60 φορές
MVI B,01H      ; φωτα αναμμενα = 1 
CALL INITIAL_DISPLAY   ;καλούμε τη ρουτίνα αυτή για να αρχίσει στην οθόνη την αντίστροφη μέτρηση των 60 sec 
EI             ; από το σημείο αυτό και μετά ξαναδέχεται κάποιο interrupt 
CALL LETSGO    ; αρχίζουμε τη ρουτίνα αντίστροφης μέτρησης 
               ;
LETSGO:        ;
MOV D,A        ; counter στον καταχωρητή D
MOV A,B        ; extra έλεγχος για το αν θα ανάψω όλα τα LED ή όχι, θα τα ανάψω δηλαδή μόνο αν το 
               ; flag από το interrupt_routine έχει γίνει 1
CPI 01H        ; αν δεν έχει πατηθεί interrupt 
JC LOOP1       ; επέστρεψε στην αρχή μέχρι να πατηθεί
               ;
RUN_LOOP:      ;
MVI A,FFH      ; 
CMA            ;
STA 3000H      ; άναψε όλα τα LED
   
CALL 1_SEC_DELAY   ;   κάλεσε τη ρουτίνα καθυστέρησης 1 sec
CALL DISPLAY       ;   εμφάνισε στην οθόνη μέσω της ρουτίνας
               ;
CONTINUE_RUN_LOOP: ;
DCR D          ; μείωσε κατά 1 τον counter που μετράει τη λούπα
JNZ RUN_LOOP   ; ξανατρέξε τη λούπα
JMP END        ; 

INITIAL_DISPLAY:
PUSH PSW       ; αποθηκεύουμε στη στοίβα Α και flags για να μην επηρεάσουμε την υπόλοιπη άσκηση 
MVI A,00H      ;
STA 09C2H      ; αποθηκεύουμε σε αυτή τη θέση μνήμης το 0
               ;
MVI A,06H      ;
STA 09C3H      ; αποθηκεύουμε στην ακριβώς επόμενη θέση μνήμης το 6 
               ;
MVI A,00H      ; 
STA 09C4H      ;
STA 09C5H      ;
STA 09C6H      ;
STA 09C7H	 ; γεμίζουμε τις άλλες θέσεις με μηδενικά ξανά απλά για σιγουριά
               ;
LXI D,09C2H    ; δείχνουμε από ποια θέση μνήμης θέλουμε να ξεκινήσουμς
               ;
CALL STDM      ;
CALL DCD       ; αρχικοποιήση και display του 60 στην οθόνη 
POP PSW        ; επαναφέρουμε στοίβα
RET            ; συνεχίζουμε στο interrupt_routine
               ;
1_SEC_DELAY:   ;
PUSH PSW       ; 
LXI B,1C52H    ; φορτώνουμε στον διπλό καταχωρητή ΒC την καθυστέρηση του 1 sec
CALL DELB      ; έτοιμη ρουτίνα καθυστέρησης με βάση το B που ορίσαμε
POP PSW        ; 
RET            ;
               ;
DISPLAY:       ;
CALL 1_SEC_DELAY  ; παρατηρήσαμε ότι αλλιώς δεν εμφανίζονταν σωστά και με σωστή καθυστέρηση τα 
               ; αποτελέσματα στην οθόνη
PUSH PSW       ; 
LDA 09C2H      ; φέρε την τιμή (μονάδες χρονομέτρου) που είναι αποθηκευμένη σε αυτή τη θέση μνήμης
CPI 00H        ; αν είναι μηδέν
JZ DEKADES     ; κάνε jump στη ρουτίνα δεκάδες
DCR A          ; αλλιώς μείωσε τον καταχωρητή που έχει τις μονάδες κατά 1
STA 09C2H      ; και αποθήκευσε την νέα τιμή των μονάδων εκ νεου στη μνήμη
               ;
LXI D,09C2H    ; 
               ;
CALL STDM      ;
CALL DCD       ;
POP PSW        ; display 
JMP CONTINUE_RUN_LOOP   ; γύρνα στη λούπα
               ;
DEKADES:       ;
LDA 09C3H      ; φέρε την τιμή (δεκάδες χρονομέτρου) από τη μνήμη
CPI 00H        ; αν είναι μηδέν τέλος
JZ END         ;
DCR A          ; μείωσε τις δεκάδες κατά 1
STA 09C3H      ; βάλτο στη μνήμη
LDA 09C2H      ; 
MVI A,09H      ; κάνε τις μονάδες 9 
STA 09C2H      ; φόρτωσε τες στη μνήμη
               ; 
LXI D,09C2H    ;
               ;
CALL STDM      ;
CALL DCD       ; display
               ;
JMP CONTINUE_RUN_LOOP    ; επέστρεψε στη λούπα
               ;
END:           ;
MVI B,10H      ; καθυστέρηση
CALL DELB      ;
MVI A,00H      ;
CMA            ;
STA 3000H      ; κλείσε τα LED
END









































