IN 10H         ;
               ;
MVI A,0DH      ; 00001101 = MSE=1, M7.5=1, M6.5=0, M5.5=1
SIM            ; ενεργοποιεί ΜΟΝΟ την RST 6.5
EI             ;
               ;
MVI A,00H      ;
STA 0902H      ;     
STA 0903H      ;
STA 0904H      ;
STA 0905H      ; 
STA 0906H      ;
STA 0907H	 ; αρχικοποιώ τα LSB με 0 
LXI D,0902H    ;
               ;
CALL STDM      ;
               ;
MAIN:          ;
CALL DCD       ; 
JMP MAIN       ; για να ειναι συνεχεια κλειστα οσο δεν εχουμε interrupt (;)
               ;
INTR_ROUTINE:  ; 
PUSH PSW       ;
CALL KIND      ; παίρνει δεδομένα (είσοδο) από το πληκτρολόγιο
STA 0907H      ; αποθηκεύει τον πρώτο αριθμό που δέχεται σαν είσοδο στην θέση μνήμης
CALL KIND      ; ξαναπαίρνει δεδομένα 
STA 0906H      ; αποθηκεύει
               ;
LXI D,0902H    ; δείχνει στην αρχική θέση μνήμης από όπου θα ξεκινήσει το display
CALL STDM      ;
CALL DCD       ; display τους αριθμούς που δέχθηκε σαν είσοδο από το πληκτρολόγιο στα δύο αριστερότερα MSB 
               ;
LDA 0907H      ; φορτώνω από τη μνήμη το πρώτο ψηφίο το οποίο δέχθηκε από τη μνήμη (δεκάδες)
RLC            ;
RLC            ;
RLC            ;
RLC            ; το μεταφέρω στα 4MSB
MOV B,A        ; 
LDA 0906H      ; φέρνω και το δεύτερο ψηφίο από τη μνήμη (μονάδες) 
               ; το οποίο είναι ήδη αποθηκευμένο στα 4 LSB
ORA B          ; κάνω OR τα MSB με τα LSB και ο A τωρα εχει το πληκτρολογιο που θα κανω τισ συγκρισεις
               ;
               ; K1=47H δηλαδή 71 αλλα η περιοχη μου ειναι μεχρι και ισο με το 70
               ; K2=BAH δηλαδή 186 αλλα η περιοχη μου ειναι μεχρι 185
               ;
MVI D,47H      ; βάλε το Κ1 στον καταχωρητή D
CMP D          ; αν ο αριθμος-είσοδος είναι <71
JC PERIOXI_1   ; αν ειναι άρα <= 70 πηγαινε στην περιοχη 1
               ; ΑΛΛΙΩΣ
MVI E,BAH      ; βάλε το Κ2 στον καταχωρητή Ε
CMP E          ; αν ο αριθμος-είσοδος είναι <186
JC PERIOXI_2   ; αν ειναι άρα <= 185 πηγαινε στην περιοχη 2
               ; ΑΛΛΙΩΣ
JMP PERIOXI_3  ; πήγαινε στην περιοχή 3 
               ;
PERIOXI_1:     ; 
MVI A,01H      ; φόρτωσε την τιμή 1 (πρώτο LED)
CMA            ;
STA 3000H      ;
JMP END        ; άναψε το πρώτο LEDaki
               ;
PERIOXI_2:     ;
MVI A,02H      ; φόρτωσε την τιμή 2 (δεύτερo LED)
CMA            ;
STA 3000H      ; άναψε το δεύτερο LEDaki
JMP END        ; 
               ;
PERIOXI_3:     ;  
MVI A,04H      ; φόρτωσε την τιμή 4(τρίτο LED)
CMA            ;
STA 3000H      ; άναψε τρίτο LEDaki 
JMP END        ;
               ;
END:           ; τέλος 
END
